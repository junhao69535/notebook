vnote_backup_file_826537664 D:/notebook/pgsql/执行计划.md
# 执行计划

## 扫描
### 全表扫描
即顺序扫描，EXPLAIN中会显示Seq Scan。

### 索引扫描
EXPLAIN中会显示Index Scan。

### 位图扫描
扫描索引，把满足条件的行或块在内存中建一个位图，扫描完索引后，再根据位图到表的数据文件中把相应的数据读出来，把随机I/O转化为顺序I/O。[位图扫描原理](http://www.mamicode.com/info-detail-3069851.html)


## 连接
### 嵌套循环连接
外表驱动内表，外表应该使用小表。如

```SQL
select a.*,b* from a,b on a.xx = b.xx;
```

那么a表就是驱动表（外表），b表就是内表。假设外表记录数为n，内表记录数为m，时间复杂度为O(n+n\*m)。如果反过来连接，那么时间复杂度为O(m+m\*n)。在内表加连接字段索引能优化性能。一般用于结果集较小的连接。

### Hash Join
优化器使用两个表中较小的表，并利用连接键在内存中建立散列表，然后扫描较大的表并探测散列表，找出与散列表匹配的行。假如小表的记录数为n，大表的记录数为m，时间复杂度为O(n+m)。

这种方式适用于较小的表可以完全放于内存的情况，如果表很大，不能完全放入内存，优化器会将它分割成若干个不同的分区，把不能放入内存的部分写入磁盘的临时段，此时要有较大的临时段以便尽量提交I/O性能。

### Merge Join
通常情况下散列连接的效果比合并连接好，然而如果源数据上有索引，或者结果已经被排过序，在执行排序合并连接时就不需要排序了，这时合并连接的性能会优于散列连接。
